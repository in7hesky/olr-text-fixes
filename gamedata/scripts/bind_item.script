-- биндер еды и частей мутантов
-- hi_flyer 10/03/15
		
local time_apdeyta = 0
local timerup = 1000
local ini = system_ini()

function Init(obj)
	local oNewBinder = CItemBinder(obj)
	obj:bind_object(oNewBinder)	
end

class "CItemBinder" (object_binder)
function CItemBinder:__init(obj) super(obj)
	self.raded = false
	self.drop_del = false
end 

function CItemBinder:reload(section)
	object_binder.reload(self, section)
end

function CItemBinder:reinit()
	object_binder.reinit(self)
end

function CItemBinder:net_save_relevant()
	return true
end

function CItemBinder:save(packet)
	object_binder.save(self, packet)	
end

function CItemBinder:load(reader)
	object_binder.load(self, reader)
end

function CItemBinder:net_spawn(data)
	if not object_binder.net_spawn(self, data) then
		return false
	end
	set_radfood_flag(self.object)
        return true
end

function CItemBinder:net_destroy()
	object_binder.net_destroy(self)
end


function CItemBinder:update(delta)
	object_binder.update(self, delta)

	--local pt = profile_timer()
	--pt:start()

	local cond = self.object:condition()

        if cond == 1 then
        	if self.object:section() == "kolbasa" or self.object:section() == "bread" or self.object:section() == "conserva" then
        		self.object:set_condition((math.random(45,95)/100))
        	end
        end

	if time_global() > time_apdeyta then
		time_apdeyta = time_global() + timerup
        	if ini:line_exist(self.object:section(), "cor_time") and cond > 0.01 then	  
			self.object:set_condition(cond - self:TimeCondLost())
			--log1("cond up food - ["..self.object:name().."]  -- ["..self.object:condition().."] ")
		end
        end

	--pt:stop()
	--prints("работало (item binder) "..pt:time().." ms")

end

	

function CItemBinder:TimeCondLost()
	local skis = ini:r_float(self.object:section(), "cor_time") 
	if skis < 0 then
		return 0
	end
	return 100/skis/24/100/60 * 100   ---  // 100/skis/24/100/60
end		



	
function set_radfood_flag(obj)

	if xvars then
	if xvars.foods then

	if xvars.foods[obj:name()] == nil and obj:parent() then
	--log1("net spawn food - "..obj:name().." parent - "..obj:parent().."")
	end 

	if xvars.foods[obj:name()] ~= nil then
	--log1("net spawn food - "..obj:name().." УЖЕ ЗАРЕГАНА")
	return
	end
	if math.random(1,2) == 1 then
	xvars.foods[obj:name()] = true
	--log1("net spawn food - "..obj:name().." SET raded = TRUE")
	else
	xvars.foods[obj:name()] = false
	--log1("net spawn food  - "..obj:name().." SET raded = FALSE")
	end
	end

	end


end

	
